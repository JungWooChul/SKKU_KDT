1) 텍스트 모드
•	CLI (Command Line Interface)
•	CUI (Character User Interface)
•	TUI (Text User Interface)

2) GUI (Graphic User Interface) 모드

+ 리눅스 계정
•	보안을 위해 로그인시 패스워드 요구
•	유닉스 / 리눅스에서는 기본적으로 세 가지 계정이 존재
	•	root - 관리자 계정
		: 거의 모든 권한을 행사할 수 있고 시스템 관리 목적의 계정

	• system 계정 - 시스템 운영에 사용되는 계정
		: 로그인 불가

	• 일반 사용자 계정 - 필요에 따라 생성되는 계정
		: 로그인이 허락되는 계정
		: 보안상 이유로 시스템 사용에 많은 제약을 받음
	+ text mode 명령어 저장
- 코드를 복사 (드래그 후 마우스 오른쪽 버튼) => window 메모장에 ctrl+v
_ 반대 : 윈도우에서 복사 후 리눅스 터미널에 마우스 오른쪽 버튼으로 붙여넣기

+ 리눅스 구조
- 디렉토리(파일을 내용, 종류에 따라서 모아 두는 것) 구조 _ 디렉토리 안에 디렉토리를 넣을 수 있어서 계층이 생김 => 트리 구조

+ PATH
 •	사용자가 현재 지금 위치하고 있는 디렉토리 : 현재 디렉토리
•	사용자는 현재 디렉토리에 있는 파일과 디렉토리만 직접 조작 가능

•	절대 경로 : 파일 및 디렉토리 위치를 ‘/’ (루트 디렉토리) 기준으로 표시
•	상대 경로 : 파일 및 디렉토리 위치를 현재 디렉토리 기준으로 표시 (권장) ex) . : 현재 디렉토리 / .. : 부모 디렉토리

+ shell : 명령어 해석기
명령어 ————————— kernel ———————— CPU
	
—> kernel도 이진수로 인식
ls(list) — — — — — — shell — — — — — — kernel — — — CPU

+ text mode 명령어 저장
- 코드를 복사 (드래그 후 마우스 오른쪽 버튼) => window 메모장에 ctrl+v
_ 반대 : 윈도우에서 복사 후 리눅스 터미널에 마우스 오른쪽 버튼으로 붙여넣기

+ 리눅스 구조
- 디렉토리(파일을 내용, 종류에 따라서 모아 두는 것) 구조 _ 디렉토리 안에 디렉토리를 넣을 수 있어서 계층이 생김 => 트리 구조

+ PATH
 •	사용자가 현재 지금 위치하고 있는 디렉토리 : 현재 디렉토리
•	사용자는 현재 디렉토리에 있는 파일과 디렉토리만 직접 조작 가능

•	절대 경로 : 파일 및 디렉토리 위치를 ‘/’ (루트 디렉토리) 기준으로 표시
•	상대 경로 : 파일 및 디렉토리 위치를 현재 디렉토리 기준으로 표시 (권장) ex) . : 현재 디렉토리 / .. : 부모 디렉토리

+ shell : 명령어 해석기
명령어 ————————— kernel ———————— CPU
	
—> kernel도 이진수로 인식
ls(list) — — — — — — shell — — — — — — kernel — — — CPU

+ meta character
: shell이 특별한 의미로 해석하는 문자 (특수문자들이 보통 이에 해당)

pedirection - 입출력 방향 재지정
file decriptor : 열려있는 파일에 대한 식별자

•	0 : 표준입력
•	1 : 표준출력
•	2: 표준에러
•	1> : 출력방향 전환 (표준출력 => file). 파일이 존재한다면 overwrite (1>> : 출력방향 전환 (표준출력 => f11e). 파일이 존재한다면 append
•	< : 입력방향 전환 (표준입력 <= f1le). 입력을 키보드가 아닌 파일에서 받아들인다 <K[특별한 문자] : Here Document. 특별한 문자가 입력되면 파일 닫기.

| (pipe - python or 기호)
: pipe 앞의 명령의 실행 결과를 pipe 뒤의 명령어의 입력으로 전달
: 파이프 왼쪽을 출력이 가능해야 하고 파아프의 오른쪽은 입력이 가능해야 함에 유의!
: pipe를 사용하면 명령을 조합해서 사용할 수 있으므로 매우 많이 사용

+ grep (get regular expression) US
: 특정한 문자열을 포함하고 있는 라인을 찾기 위한 명령어

+ vi(m) 편집기
: unix의 text 모드에서 사용하는 편집기

+ vi 편집기 모드
﻿﻿﻿명령 모드 : v1 편집기 기본 모드 (편집 명령어 사용 가능 ex. 커서 이동)
﻿﻿﻿입력 모드 : 키보드 1, a, 0, s 등을 입력 후 입력 명령어 사용 가능
﻿﻿﻿확장 모드 (ex 모드, last line 모드) - 콜론(:) 입력 후 화면 가장 아래 쪽에 명령어 입력

+ 각 모드 사이의 전환
명령 모드 -> 입력 모드 : 입력 모드 명령어 중 하나를 키보드 누르기
입력모드 -> 명령 모드 : esc 키 누르기
입력 모드 -> 확장 모드 : 반드시 명령 모드로 전환 후 확장 모드 명령어(:) 누르기
